- id: '1565175229729'
  alias: Auto color temperature - trigger on time
  trigger:
  - entity_id: sensor.timeofday
    platform: state
  condition:
  - condition: state
    entity_id: input_boolean.auto_color_enabled
    state: 'on'
  action:
  - data_template:
      timeofday: '{{states.sensor.timeofday.state}}'
    service: python_script.act_time
- alias: Wake-me up using bedroom lights
  id: '1565175229733'
  trigger:
  - platform: template
    value_template: '{{ (((states.input_datetime.morning_start_time.attributes[''timestamp''])
      - (states.input_number.wakeup_time_transition.state | int * 60)) | timestamp_custom(''%H:%M'',
      False) ) == ( states.sensor.time.state ) }} '
  condition:
  - condition: state
    entity_id: input_boolean.wakeup_enabled
    state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.wakeup_weekend
      state: 'on'
    - condition: time
      weekday:
      - mon
      - tue
      - thu
      - fri
  action:
  - data_template:
      transition: '{{states.input_number.wakeup_time_transition.state}}'
    service: script.do_wake_up_lights
- alias: Change wake-up time based on sliders
  id: '1565175229702'
  trigger:
  - platform: state
    entity_id: input_number.morning_start_hour
  - platform: state
    entity_id: input_number.morning_start_minutes
  condition: []
  action:
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.morning_start_time
      time: "{{ ((((states('input_number.morning_start_hour') | int  * 3600 )
                  + (states('input_number.morning_start_minutes') | int * 60)) | int) |int|timestamp_custom('%H:%M',False)) }}"
- id: '1566761726209'
  alias: nacht_brightness
  trigger:
  - entity_id: light.slaapkamer_plafond
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sensor.timeofday
    state: '''Night'''
  action:
  - delay:
      seconds: 1
  - condition: template
    value_template: "{{ states.light.nachtkastje.attributes.brightness > 30 }}"
  - service: script.freek_evening
- id: '1566763763348'
  alias: Welterusten
  trigger:
  - entity_id: light.slaapkamer
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - after: '22:00'
    before: 05:00
    condition: time
  action:
  - service: script.turn_all_lights_off
- id: '1565175229727'
  alias: Telegram turn lights off
  trigger:
  - event_data:
      command: /lightsoff
    event_type: telegram_command
    platform: event
  condition: []
  action:
  - service: script.turn_all_lights_off
- id: '1565175339111'
  alias: Telegram start reminder
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
     command: /remind
  condition: []
  action:
  - service: telegram_bot.send_message
    data_template:
      target: '{{trigger.event.data.chat_id}}'
      message: 'Over hoeveel uur?'
      inline_keyboard:
        - "1:/setremind 1h, 1.5:/setremind 1.5h"
        - "2:/setremind 2h, 2.5:/setremind 2.5h"
        - "3:/setremind 3h, 3.5:/setremind 3.5h"
        - "4:/setremind 4h, 4.5:/setremind 4.5h"
        - "5:/setremind 5h, 5.5:/setremind 5.5h"
- id: '1565175449111'
  alias: Set reminder Telegram callback
  trigger:
  - platform: event
    event_type: telegram_callback
  condition: []
  action:
  - service: telegram_bot.send_message
    data_template:
      target: "{{trigger.event.data.chat_id}}"
      message: "OK, ik herinner {{trigger.event.data.from_first}} over {{trigger.event.data.data[11:]}}"
  - delay:
      minutes: "{{((trigger.event.data.data[10:-1]|float*60)|int)}}"
  - service: telegram_bot.send_message
    data_template:
      target: "{{trigger.event.data.chat_id}}"
      message: "{{trigger.event.data.from_first}}, het is nu {{trigger.event.data.data[11:]}} later."
- id: '1565175229111'
  alias: Update Available Notification
  trigger:
  - platform: state
    entity_id: binary_sensor.updater
    from: 'off'
    to: 'on'
  action:
  - service: notify.teledobbyme
    data_template:
      message: Home Assistant {{ state_attr('binary_sensor.updater', 'newest_version')
        }} is available.
